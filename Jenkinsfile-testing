def versionTag = "v${env.BUILD_NUMBER}"

pipeline {
  agent none

  stages {
    stage('Test') {
      agent {
        ecs {
          inheritFrom 'transfer-frontend'
        }
      }
      steps {
        checkout scm
        sh 'sbt -no-colors test scalastyle'
      }
    }
    stage('Post-build') {
      agent {
        label "master"
      }
      when {
        expression { env.BRANCH_NAME == "master"}
      }
      stages {
        stage('Tag Release') {
          steps {
            sh "git tag ${versionTag}"
            sshagent(['github-jenkins']) {
              sh("git push origin ${versionTag}")
            }
          }
        }
        stage("Build Docker image") {
          agent {
            ecs {
              inheritFrom "transfer-frontend"
            }
          }
          steps {
            checkout scm
            sh 'sbt -no-colors test scalastyle'
            sh "sbt -no-colors dist"
            stash includes: "Dockerfile", name: "Dockerfile"
            stash includes: "target/universal/tdr-transfer-frontend-*.zip", name: "tdr-transfer-frontend-zip"
          }
        }
        stage("Push Docker image") {
          agent {
            label "master"
          }
          steps {
            unstash "tdr-transfer-frontend-zip"
            unstash "Dockerfile"
            script {
              docker.withRegistry('', 'docker') {
                docker.build("nationalarchives/tdr-transfer-frontend:${versionTag}").push()
                slackSend color: "good", message: "*Transfer frontend* :whale: Pushed version ${versionTag} to Docker Hub", channel: "#tdr-releases"
              }
            }
          }
        }
        stage('Deploy to integration') {
          steps {
            build(
                job: "TDR Front End Deploy",
                parameters: [
                    string(name: "STAGE", value: "intg"),
                    string(name: "TO_DEPLOY", value: versionTag)
                ],
                wait: false)
          }
        }
      }
    }
  }
}
