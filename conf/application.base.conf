# The base config file for all dev and environment-specific config files

# This is needed for the play-redis library. Without it, it won't store auth information in the cache and you can't log in.
pekko.actor.allow-java-serialization = "on"
pekko.actor.warn-about-java-serializer-usage = "off"

auth.secret = ${AUTH_SECRET}
read.auth.secret = ${READ_AUTH_SECRET}
auth.url=${AUTH_URL}
auth.clientId="tdr-fe"
auth.realm="tdr"

consignmentapi.url = ${consignmentapi.domain}"/graphql"

logout.url="http://localhost:9000/signed-out"

s3.endpoint = "https://s3.eu-west-2.amazonaws.com/"

sns.endpoint = "https://sns.eu-west-2.amazonaws.com/"

play.filters.enabled += play.filters.https.RedirectHttpsFilter

play {
  http {
    errorHandler = "errors.ErrorHandler"
    filters=configuration.CustomFilters
    port = 9000
    parser {
        maxMemoryBuffer = 10MB
        maxDiskBuffer = 100MB
    }
  }

  # TDR depends on the Redis cache being available because it is used to store Keycloak parameters like the state
  # parameter during login, so return an error rather than ignoring any cache errors
  cache.redis.recovery = log-and-fail

  i18n.langs = ["en-gb"]

  modules.enabled += "modules.SecurityModule"
  modules.enabled += "play.api.cache.redis.RedisCacheModule"

  # Remove deprecated X-XSS-Protection header
  filters.headers.xssProtection = null
}

region = "eu-west-2"

parsers.text.maxLength=5M
viewTransfers.numberOfItemsPerPage=10
draft_metadata_s3_bucket_name = ${DRAFT_METADATA_S3_BUCKET_NAME}

featureAccessBlock {
  blockSkipMetadataReview=${BLOCK_SKIP_METADATA_REVIEW}
}

draftMetadata {
    fileName = "draft-metadata.csv"
    errorFileName = "draft-metadata-errors.json"
}

notificationSnsTopicArn = ${NOTIFICATION_SNS_TOPIC_ARN}
fileChecksTotalTimoutInSeconds = 480
fileChecksTotalTimoutInSeconds = ${?FILE_CHECKS_TOTAL_TIMEOUT_IN_SECONDS}